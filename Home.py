import streamlit as st
import pandas as pd
import plotly.express as px
import plotly.graph_objects as go
from pages.utils.github_helpers import get_github_file_content
from datetime import datetime
from streamlit_shadcn_ui import ui

# ุฅุนุฏุงุฏุงุช ุงูุตูุญุฉ
st.set_page_config(
    page_title="ููุญุฉ ูุคุดุฑุงุช ุงูุจุฑุงูุฌ ุงูุฃูุงุฏูููุฉ",
    page_icon="๐",
    layout="wide"
)

# CSS ูุฎุตุต ูุฏุนู ุงููุบุฉ ุงูุนุฑุจูุฉ ูุงูุชุฎุทูุท
st.markdown("""
<style>
    /* ุชุนุฏููุงุช ุนุงูุฉ ูุฏุนู RTL */
    .stApp {
        direction: rtl;
        text-align: right;
    }
    
    /* ุชูุณูู ุงูุนููุงู ุงูุฑุฆูุณู */
    h1 {
        color: #1e88e5;
        padding-bottom: 15px;
        border-bottom: 2px solid #1e88e5;
        margin-bottom: 30px;
    }
    
    /* ุชูุณูู ุงูุนูุงููู ุงููุฑุนูุฉ */
    h2, h3 {
        color: #1e88e5;
        margin-top: 30px;
        margin-bottom: 20px;
    }
    
    /* ุชูุณูู ุงูุจุทุงูุงุช ุงููุฎุตุตุฉ */
    .stat-card {
        background-color: white;
        border-radius: 0.75rem;
        padding: 1.5rem;
        box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
        height: 100%;
    }
    
    .stat-card-title {
        font-size: 0.875rem;
        font-weight: 500;
        color: #64748b;
        margin-bottom: 0.5rem;
    }
    
    .stat-card-value {
        font-size: 1.875rem;
        font-weight: 700;
        color: #0f172a;
        margin-bottom: 0.5rem;
    }
    
    .stat-card-delta {
        font-size: 0.875rem;
        display: flex;
        align-items: center;
    }
    
    .delta-positive {
        color: #16a34a;
    }
    
    .delta-negative {
        color: #dc2626;
    }
    
    /* ุชูุณูู ุจุทุงูุงุช ุงูุฃุนุถุงุก */
    .faculty-card {
        background: linear-gradient(135deg, #f8fafc 0%, #f1f5f9 100%);
        border-radius: 0.75rem;
        padding: 1.5rem;
        margin-bottom: 0.75rem;
        box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
        border: 1px solid #e2e8f0;
    }
    
    /* ุชูุณูู ุงูุฅูุฌุงุฒุงุช */
    .achievement-item {
        padding: 1rem;
        border-right: 3px solid #1e88e5;
        margin-bottom: 0.75rem;
        background-color: rgba(241, 245, 249, 0.6);
        border-radius: 0.5rem;
    }
    
    /* ุชูุณูู ุงูุชุจููุจุงุช */
    .custom-tabs {
        margin-bottom: 2rem;
    }
    
    /* ุชูุณูู ุงูุฎุทูุท */
    body {
        font-family: 'Tajawal', sans-serif;
    }
</style>

<!-- ุฅุถุงูุฉ ุฎุท Tajawal ูู Google Fonts -->
<link href="https://fonts.googleapis.com/css2?family=Tajawal:wght@400;500;700&display=swap" rel="stylesheet">
""", unsafe_allow_html=True)

# ---- ุงูุชุฑููุณุฉ ----
with ui.card(class_="border-0 shadow-none"):
    col1, col2 = st.columns([3, 1])
    with col1:
        st.title("๐ ููุญุฉ ูุคุดุฑุงุช ุงูุจุฑุงูุฌ ุงูุฃูุงุฏูููุฉ")
        st.markdown("### ูููุฉ ุงููุฑุขู ุงููุฑูู ูุงูุฏุฑุงุณุงุช ุงูุฅุณูุงููุฉ")

    with col2:
        # ุนุฑุถ ุงูุชุงุฑูุฎ ุงูุญุงูู
        today = datetime.now().strftime("%Y/%m/%d")
        st.markdown(f"<div style='text-align: left;'>ุงูุชุงุฑูุฎ: {today}</div>", unsafe_allow_html=True)

# ุฑุณุงูุฉ ุชุฑุญูุจูุฉ ูู ุงูุดุฑูุท ุงูุฌุงูุจู
with st.sidebar:
    ui.alert(
        title="ูุฑุญุจุงู ุจู ูู ููุญุฉ ุงููุนูููุงุช",
        description="ุงุฎุชุฑ ุจุฑูุงูุฌูุง ูู ุงููุงุฆูุฉ ุฃุนูุงู ูุนุฑุถ ุชูุงุตููู",
        variant="default"
    )

# ---- ุชุญููู ุงูุจูุงูุงุช ----
@st.cache_data(ttl=3600)
def load_department_summary():
    try:
        return get_github_file_content("data/department_summary.csv")
    except:
        # ุฅูุดุงุก ุจูุงูุงุช ุชุฌุฑูุจูุฉ ูู ุญุงูุฉ ุนุฏู ูุฌูุฏ ุงูุจูุงูุงุช
        data = {
            "ุงูุจุฑูุงูุฌ": [
                "ุจูุงููุฑููุณ ูู ุงููุฑุขู ูุนูููู",
                "ุจูุงููุฑููุณ ุงููุฑุงุกุงุช",
                "ูุงุฌุณุชูุฑ ุงูุฏุฑุงุณุงุช ุงููุฑุขููุฉ ุงููุนุงุตุฑุฉ",
                "ูุงุฌุณุชูุฑ ุงููุฑุงุกุงุช",
                "ุฏูุชูุฑุงู ุนููู ุงููุฑุขู",
                "ุฏูุชูุฑุงู ุงููุฑุงุกุงุช"
            ],
            "ุนุฏุฏ ุงูุทูุงุจ": [125, 110, 90, 120, 70, 85],
            "ุนุฏุฏ ุงูุทุงูุจุงุช": [85, 70, 60, 80, 50, 55],
            "ุฃุนุถุงุก ููุฆุฉ ุงูุชุฏุฑูุณ": [15, 12, 8, 10, 5, 6]
        }
        return pd.DataFrame(data)

@st.cache_data(ttl=3600)
def load_yearly_data():
    """ุชุญููู ุจูุงูุงุช ุงูุณููุงุช ูู 2020 ุฅูู 2024 (ููุนุฑุถ ุงูุชูุถูุญู)"""
    years = list(range(2020, 2025))
    data = []
    programs = [
        "ุจูุงููุฑููุณ ูู ุงููุฑุขู ูุนูููู",
        "ุจูุงููุฑููุณ ุงููุฑุงุกุงุช",
        "ูุงุฌุณุชูุฑ ุงูุฏุฑุงุณุงุช ุงููุฑุขููุฉ ุงููุนุงุตุฑุฉ",
        "ูุงุฌุณุชูุฑ ุงููุฑุงุกุงุช",
        "ุฏูุชูุฑุงู ุนููู ุงููุฑุขู",
        "ุฏูุชูุฑุงู ุงููุฑุงุกุงุช"
    ]
    
    for year in years:
        for program in programs:
            # ุงุณุชุฎุฏุงู ุงููุนููุฉ ุงูุชุงููุฉ ูุชูููุฏ ุฃุฑูุงู ููุงุณุจุฉ
            program_index = programs.index(program)
            male_students = 60 + (year - 2020) * 5 + program_index * 10
            female_students = 40 + (year - 2020) * 5 + program_index * 8
            total_students = male_students + female_students
            
            data.append({
                "ุงูุนุงู": year,
                "ุงูุจุฑูุงูุฌ": program,
                "ุนุฏุฏ ุงูุทูุงุจ": male_students,
                "ุนุฏุฏ ุงูุทุงูุจุงุช": female_students,
                "ุงููุฌููุน": total_students,
                "ูุณุจุฉ ุงููุฌุงุญ": min(95, 70 + (year - 2020) * 2 + program_index * 2),
                "ูุนุฏู ุงูุฑุถุง": min(90, 75 + (year - 2020) * 1.5 + program_index)
            })
            
    return pd.DataFrame(data)

@st.cache_data(ttl=3600)
def load_faculty_achievements():
    """ุชุญููู ุฃุญุฏุซ ุฅูุฌุงุฒุงุช ุฃุนุถุงุก ููุฆุฉ ุงูุชุฏุฑูุณ"""
    achievements = [
        {"ุงูุนุถู": "ุฏ. ูุญูุฏ ุฃุญูุฏ", "ุงูุฅูุฌุงุฒ": "ูุดุฑ ุจุญุซ ูู ูุฌูุฉ ุนุงูููุฉ", "ุงูุชุงุฑูุฎ": "2025-04-15", "ุงูููุงุท": 50, "ุงูุจุฑูุงูุฌ": "ุจูุงููุฑููุณ ูู ุงููุฑุขู ูุนูููู"},
        {"ุงูุนุถู": "ุฏ. ุนุงุฆุดุฉ ุณุนุฏ", "ุงูุฅูุฌุงุฒ": "ุฅุทูุงู ูุจุงุฏุฑุฉ ุชุนููููุฉ", "ุงูุชุงุฑูุฎ": "2025-04-10", "ุงูููุงุท": 40, "ุงูุจุฑูุงูุฌ": "ุฏูุชูุฑุงู ุนููู ุงููุฑุขู"},
        {"ุงูุนุถู": "ุฏ. ุนุจุฏุงููู ูุญูุฏ", "ุงูุฅูุฌุงุฒ": "ุงููุดุงุฑูุฉ ูู ูุคุชูุฑ ุฏููู", "ุงูุชุงุฑูุฎ": "2025-04-05", "ุงูููุงุท": 35, "ุงูุจุฑูุงูุฌ": "ุจูุงููุฑููุณ ุงููุฑุงุกุงุช"},
        {"ุงูุนุถู": "ุฏ. ูุงุทูุฉ ุนูู", "ุงูุฅูุฌุงุฒ": "ุชุทููุฑ ููุฑุฑ ุฏุฑุงุณู", "ุงูุชุงุฑูุฎ": "2025-04-01", "ุงูููุงุท": 30, "ุงูุจุฑูุงูุฌ": "ูุงุฌุณุชูุฑ ุงูุฏุฑุงุณุงุช ุงููุฑุขููุฉ ุงููุนุงุตุฑุฉ"},
        {"ุงูุนุถู": "ุฏ. ุฎุงูุฏ ุฅุจุฑุงููู", "ุงูุฅูุฌุงุฒ": "ุชูุฏูู ูุฑุดุฉ ุนูู", "ุงูุชุงุฑูุฎ": "2025-03-25", "ุงูููุงุท": 25, "ุงูุจุฑูุงูุฌ": "ูุงุฌุณุชูุฑ ุงููุฑุงุกุงุช"}
    ]
    return pd.DataFrame(achievements)

@st.cache_data(ttl=3600)
def load_top_faculty():
    """ุชุญููู ุฃูุถู ุฃุนุถุงุก ููุฆุฉ ุงูุชุฏุฑูุณ"""
    top_faculty = [
        {"ุงูุงุณู": "ุฏ. ุนุงุฆุดุฉ ุณุนุฏ", "ุงูููุจ": "ุงูุนุถู ุงูููุฉ", "ุงูุดุงุฑุฉ": "๐", "ุงูููุงุท": 320, "ุงูุจุฑูุงูุฌ": "ุฏูุชูุฑุงู ุนููู ุงููุฑุขู"},
        {"ุงูุงุณู": "ุฏ. ูุญูุฏ ุฃุญูุฏ", "ุงูููุจ": "ุงูุนุถู ุงููููุฒ", "ุงูุดุงุฑุฉ": "๐", "ุงูููุงุท": 280, "ุงูุจุฑูุงูุฌ": "ุจูุงููุฑููุณ ูู ุงููุฑุขู ูุนูููู"},
        {"ุงูุงุณู": "ุฏ. ุนุจุฏุงููู ูุญูุฏ", "ุงูููุจ": "ุงูุนุถู ุงููุนุงู", "ุงูุดุงุฑุฉ": "๐ฅ", "ุงูููุงุท": 210, "ุงูุจุฑูุงูุฌ": "ุจูุงููุฑููุณ ุงููุฑุงุกุงุช"}
    ]
    return pd.DataFrame(top_faculty)

# ูุญุงููุฉ ุชุญููู ุงูุจูุงูุงุช
try:
    dept_data = load_department_summary()
    total_students = dept_data["ุนุฏุฏ ุงูุทูุงุจ"].sum()
    total_female_students = dept_data["ุนุฏุฏ ุงูุทุงูุจุงุช"].sum()
    total_faculty = dept_data["ุฃุนุถุงุก ููุฆุฉ ุงูุชุฏุฑูุณ"].sum()
    yearly_data = load_yearly_data()
    
    # ุงูุชุนุงูู ูุน ุงูุจูุงูุงุช ุจุดูู ุตุญูุญ - ุงุณุชุฎุฏุงู ุฃุญุฏุซ ุนุงู ูุชุงุญ
    max_year = yearly_data["ุงูุนุงู"].max()
    latest_year_data = yearly_data[yearly_data["ุงูุนุงู"] == max_year].copy()
    
    faculty_achievements = load_faculty_achievements()
    top_faculty = load_top_faculty()
except Exception as e:
    ui.alert(
        title="ุฎุทุฃ ูู ุชุญููู ุงูุจูุงูุงุช",
        description=f"{e}. ุณูุชู ุงุณุชุฎุฏุงู ุจูุงูุงุช ุชุฌุฑูุจูุฉ ูุฃุบุฑุงุถ ุงูุนุฑุถ.",
        variant="destructive"
    )
    # ุฅูุดุงุก ุจูุงูุงุช ุชุฌุฑูุจูุฉ ูู ุญุงูุฉ ุงููุดู
    total_students = 600
    total_female_students = 400
    total_faculty = 50

# ---- ุจุทุงูุงุช ุงูููุงููุณ ุงูุฑุฆูุณูุฉ ----
st.subheader("ุงููุคุดุฑุงุช ุงูุฑุฆูุณูุฉ")

with ui.card(class_="border-0 shadow-sm"):
    c1, c2, c3, c4 = st.columns(4)
    
    with c1:
        ui.metric_card(
            title="ุนุฏุฏ ุงูุทูุงุจ",
            content=f"{total_students:,}",
            description="+3% ููุฐ ุงูุนุงู ุงููุงุถู",
            trend="up"
        )
        
    with c2:
        ui.metric_card(
            title="ุนุฏุฏ ุงูุทุงูุจุงุช",
            content=f"{total_female_students:,}",
            description="+7% ููุฐ ุงูุนุงู ุงููุงุถู",
            trend="up"
        )
        
    with c3:
        ui.metric_card(
            title="ูุนุฏู ุงููุฌุงุญ ุงูุฅุฌูุงูู",
            content="87%",
            description="+3% ููุฐ ุงูุนุงู ุงููุงุถู",
            trend="up"
        )
        
    with c4:
        ui.metric_card(
            title="ูุชูุณุท ุฑุถุง ุงูุทูุงุจ",
            content="92%",
            description="+4% ููุฐ ุงูุนุงู ุงููุงุถู",
            trend="up"
        )

# ---- ุงูุฑุณููุงุช ุงูุจูุงููุฉ ----
st.subheader("ุชุญููู ุงูุจุฑุงูุฌ ุงูุฃูุงุฏูููุฉ")

# ุชุฃูุฏ ูู ุฃู latest_year_data ููุฌูุฏ ูุจู ุฅูุดุงุก ุงูุชุจููุจุงุช
if 'latest_year_data' in locals():
    # ุงุณุชุฎุฏุงู ูุชุบูุฑ ูุชุชุจุน ุงูุชุจููุจ ุงููุดุท
    if 'active_tab' not in st.session_state:
        st.session_state.active_tab = "ุชูุฒูุน ุงูุทูุงุจ ูุงูุทุงูุจุงุช"
    
    # ุฅูุดุงุก ุชุจููุจุงุช ููุชุจุฏูู ุจูู ุงูุชุญูููุงุช ุงููุฎุชููุฉ
    tab_labels = ["ุชูุฒูุน ุงูุทูุงุจ ูุงูุทุงูุจุงุช", "ููุงุฑูุฉ ุงูุจุฑุงูุฌ", "ุงูุชุทูุฑ ุงูุณููู"]
    
    with ui.tabs(value=st.session_state.active_tab):
        ui.tab("ุชูุฒูุน ุงูุทูุงุจ ูุงูุทุงูุจุงุช", id="ุชูุฒูุน ุงูุทูุงุจ ูุงูุทุงูุจุงุช")
        ui.tab("ููุงุฑูุฉ ุงูุจุฑุงูุฌ", id="ููุงุฑูุฉ ุงูุจุฑุงูุฌ")
        ui.tab("ุงูุชุทูุฑ ุงูุณููู", id="ุงูุชุทูุฑ ุงูุณููู")
        
    # ุงุญูุธ ุงูุชุจููุจ ุงููุดุท
    active_tab = st.session_state.active_tab
    
    # ูุญุชูู ุงูุชุจููุจ 1: ุชูุฒูุน ุงูุทูุงุจ ูุงูุทุงูุจุงุช
    if active_tab == "ุชูุฒูุน ุงูุทูุงุจ ูุงูุทุงูุจุงุช":
        with ui.card(class_="border-0 shadow-sm p-4"):
            col1, col2 = st.columns([1, 1])
            
            with col1:
                # ูุฎุทุท ุฏุงุฆุฑู ูุชูุฒูุน ุฅุฌูุงูู ุงูุทูุงุจ ูุงูุทุงูุจุงุช
                pie_data = pd.DataFrame({
                    "ุงููุฆุฉ": ["ุงูุทูุงุจ", "ุงูุทุงูุจุงุช"],
                    "ุงูุนุฏุฏ": [total_students, total_female_students]
                })
                
                fig_pie = px.pie(
                    pie_data, 
                    values="ุงูุนุฏุฏ", 
                    names="ุงููุฆุฉ",
                    title="ุชูุฒูุน ุงูุทูุงุจ ูุงูุทุงูุจุงุช ูู ุฌููุน ุงูุจุฑุงูุฌ",
                    color_discrete_sequence=["#1e88e5", "#E91E63"]  # ุฃุฒุฑู ููุทูุงุจุ ูุฑุฏู ููุทุงูุจุงุช
                )
                fig_pie.update_traces(textposition='inside', textinfo='percent+label')
                fig_pie.update_layout(
                    margin=dict(t=50, b=0, l=0, r=0),
                    height=400,
                    legend=dict(orientation="h", yanchor="bottom", y=-0.2),
                )
                st.plotly_chart(fig_pie, use_container_width=True)
            
            with col2:
                # ูุฎุทุท ุดุฑูุทู ููุทูุงุจ ูุงูุทุงูุจุงุช ุญุณุจ ุงูุจุฑูุงูุฌ
                fig_bar = px.bar(
                    latest_year_data, 
                    y="ุงูุจุฑูุงูุฌ", 
                    x=["ุนุฏุฏ ุงูุทูุงุจ", "ุนุฏุฏ ุงูุทุงูุจุงุช"],
                    title="ุชูุฒูุน ุงูุทูุงุจ ูุงูุทุงูุจุงุช ุญุณุจ ุงูุจุฑูุงูุฌ",
                    orientation='h',
                    color_discrete_sequence=["#1e88e5", "#E91E63"],  
                    barmode="stack"
                )
                fig_bar.update_layout(
                    xaxis_title="ุนุฏุฏ ุงูุทูุงุจ ูุงูุทุงูุจุงุช",
                    yaxis_title="ุงูุจุฑูุงูุฌ",
                    yaxis={'categoryorder':'total ascending'},
                    legend_title="ุงููุฆุฉ",
                    height=400
                )
                st.plotly_chart(fig_bar, use_container_width=True)
    
    # ูุญุชูู ุงูุชุจููุจ 2: ููุงุฑูุฉ ุงูุจุฑุงูุฌ
    elif active_tab == "ููุงุฑูุฉ ุงูุจุฑุงูุฌ":
        with ui.card(class_="border-0 shadow-sm p-4"):
            # ูุฎุทุท ุจูุงูู ููุงุฑู ูููุคุดุฑุงุช ุจูู ุงูุจุฑุงูุฌ
            fig_indicators = px.bar(
                latest_year_data,
                x="ุงูุจุฑูุงูุฌ",
                y=["ูุณุจุฉ ุงููุฌุงุญ", "ูุนุฏู ุงูุฑุถุง"],
                barmode="group",
                title="ููุงุฑูุฉ ุงููุคุดุฑุงุช ุจูู ุงูุจุฑุงูุฌ",
                labels={"value": "ุงููุณุจุฉ ุงููุฆููุฉ", "variable": "ุงููุคุดุฑ"},
                color_discrete_sequence=["#1e88e5", "#27AE60"]
            )
            fig_indicators.update_layout(
                xaxis_title="ุงูุจุฑูุงูุฌ",
                yaxis_title="ุงููุณุจุฉ ุงููุฆููุฉ",
                legend_title="ุงููุคุดุฑ",
                height=500
            )
            st.plotly_chart(fig_indicators, use_container_width=True)
        
            # ุฅุถุงูุฉ ูุฎุทุท ูุณุจุฉ ุงูุทุงูุจุงุช ููุทูุงุจ
            latest_year_data["ูุณุจุฉ ุงูุทุงูุจุงุช ููุทูุงุจ"] = (latest_year_data["ุนุฏุฏ ุงูุทุงูุจุงุช"] / latest_year_data["ุนุฏุฏ ุงูุทูุงุจ"] * 100).round(1)
            
            fig_gender_ratio = px.bar(
                latest_year_data,
                x="ุงูุจุฑูุงูุฌ",
                y="ูุณุจุฉ ุงูุทุงูุจุงุช ููุทูุงุจ",
                title="ูุณุจุฉ ุงูุทุงูุจุงุช ุฅูู ุงูุทูุงุจ ูู ูู ุจุฑูุงูุฌ (%)",
                color="ูุณุจุฉ ุงูุทุงูุจุงุช ููุทูุงุจ",
                color_continuous_scale="RdBu",
                text_auto='.1f'
            )
            fig_gender_ratio.update_layout(
                xaxis_title="ุงูุจุฑูุงูุฌ",
                yaxis_title="ุงููุณุจุฉ ุงููุฆููุฉ (%)",
                height=400
            )
            st.plotly_chart(fig_gender_ratio, use_container_width=True)
    
    # ูุญุชูู ุงูุชุจููุจ 3: ุงูุชุทูุฑ ุงูุณููู
    elif active_tab == "ุงูุชุทูุฑ ุงูุณููู":
        with ui.card(class_="border-0 shadow-sm p-4"):
            # ุงุฎุชูุงุฑ ุงูุจุฑูุงูุฌ
            col1, col2 = st.columns([2, 1])
            
            with col1:
                selected_program = ui.select(
                    label="ุงุฎุชุฑ ุงูุจุฑูุงูุฌ ูุนุฑุถ ุชุทูุฑู ุงูุณููู:",
                    options=[{"label": prog, "value": prog} for prog in dept_data["ุงูุจุฑูุงูุฌ"].unique()],
                    default=dept_data["ุงูุจุฑูุงูุฌ"].unique()[0]
                )
            
            with col2:
                options = [
                    {"label": "ุงููู", "value": "ุงููู"},
                    {"label": "ุงูุทูุงุจ", "value": "ุงูุทูุงุจ"},
                    {"label": "ุงูุทุงูุจุงุช", "value": "ุงูุทุงูุจุงุช"}
                ]
                gender_option = ui.radio_group(
                    label="ุงุฎุชุฑ ุงููุฆุฉ:",
                    options=options,
                    default="ุงููู",
                    orientation="horizontal"
                )
            
            # ุชุตููุฉ ุงูุจูุงูุงุช ุญุณุจ ุงูุจุฑูุงูุฌ ุงููุฎุชุงุฑ
            program_data = yearly_data[yearly_data["ุงูุจุฑูุงูุฌ"] == selected_program]
            
            # ุชุฃูุฏ ูู ูุฌูุฏ ุจูุงูุงุช ูุจู ุนุฑุถ ุงููุฎุทุท
            if not program_data.empty:
                # ูุฎุทุท ุฎุทู ููุชุทูุฑ ุงูุณููู ููุทูุงุจ ูุงูุทุงูุจุงุช
                if gender_option == "ุงููู":
                    y_cols = ["ุนุฏุฏ ุงูุทูุงุจ", "ุนุฏุฏ ุงูุทุงูุจุงุช", "ุงููุฌููุน"]
                    colors = ["#1e88e5", "#E91E63", "#27AE60"]
                elif gender_option == "ุงูุทูุงุจ":
                    y_cols = ["ุนุฏุฏ ุงูุทูุงุจ"]
                    colors = ["#1e88e5"]
                else:  # "ุงูุทุงูุจุงุช"
                    y_cols = ["ุนุฏุฏ ุงูุทุงูุจุงุช"]
                    colors = ["#E91E63"]
                    
                fig_students = px.line(
                    program_data,
                    x="ุงูุนุงู",
                    y=y_cols,
                    title=f"ุชุทูุฑ ุฃุนุฏุงุฏ ุงูุทูุงุจ ูู ุจุฑูุงูุฌ {selected_program} (2020-2024)",
                    labels={"value": "ุงูุนุฏุฏ", "variable": "ุงููุฆุฉ"},
                    markers=True,
                    color_discrete_sequence=colors
                )
                
                fig_students.update_layout(
                    xaxis_title="ุงูุณูุฉ",
                    yaxis_title="ุงูุนุฏุฏ",
                    legend_title="ุงููุฆุฉ",
                    height=400
                )
                st.plotly_chart(fig_students, use_container_width=True)
                
                # ูุฎุทุท ุฎุทู ูููุคุดุฑุงุช ุงูุฃุฎุฑู
                fig_indicators = px.line(
                    program_data,
                    x="ุงูุนุงู",
                    y=["ูุณุจุฉ ุงููุฌุงุญ", "ูุนุฏู ุงูุฑุถุง"],
                    title=f"ุชุทูุฑ ุงููุคุดุฑุงุช ูู ุจุฑูุงูุฌ {selected_program} (2020-2024)",
                    labels={"value": "ุงููุณุจุฉ ุงููุฆููุฉ", "variable": "ุงููุคุดุฑ"},
                    markers=True,
                    color_discrete_sequence=["#1e88e5", "#27AE60"]
                )
                fig_indicators.update_layout(
                    xaxis_title="ุงูุณูุฉ",
                    yaxis_title="ุงููุณุจุฉ ุงููุฆููุฉ",
                    legend_title="ุงููุคุดุฑ",
                    height=400
                )
                st.plotly_chart(fig_indicators, use_container_width=True)
            else:
                ui.alert(
                    title="ุชูุจูู",
                    description=f"ูุง ุชูุฌุฏ ุจูุงูุงุช ูุชุงุญุฉ ููุจุฑูุงูุฌ ุงููุญุฏุฏ: {selected_program}",
                    variant="warning"
                )
else:
    ui.alert(
        title="ุชูุจูู",
        description="ูุง ูููู ุนุฑุถ ุงูุฑุณููุงุช ุงูุจูุงููุฉ ุจุณุจุจ ุนุฏู ุชููุฑ ุงูุจูุงูุงุช.",
        variant="warning"
    )

# ---- ุฃุนุถุงุก ููุฆุฉ ุงูุชุฏุฑูุณ ุงููููุฒูู ูุฃุญุฏุซ ุงูุฅูุฌุงุฒุงุช ----
st.subheader("ุฃุนุถุงุก ููุฆุฉ ุงูุชุฏุฑูุณ ูุงูุฅูุฌุงุฒุงุช")

with ui.card(class_="border-0 shadow-sm p-4"):
    col1, col2 = st.columns([1, 1])
    
    # ุฃุนุถุงุก ููุฆุฉ ุงูุชุฏุฑูุณ ุงููููุฒูู
    with col1:
        st.markdown("### ๐ ุฃุนุถุงุก ููุฆุฉ ุงูุชุฏุฑูุณ ุงููููุฒูู")
        
        if 'top_faculty' in locals() and not top_faculty.empty:
            for _, member in top_faculty.iterrows():
                with ui.card(class_="mb-3"):
                    st.markdown(f"#### {member['ุงูุดุงุฑุฉ']} {member['ุงูุงุณู']}")
                    ui.badge(member['ุงูููุจ'], variant="outline")
                    st.markdown(f"**ุงูุจุฑูุงูุฌ:** {member['ุงูุจุฑูุงูุฌ']}")
                    
                    with ui.progress_with_text(value=member['ุงูููุงุท']/500*100):
                        st.write(f"ุงูููุงุท: {member['ุงูููุงุท']}")
        else:
            ui.alert(
                title="ูุนูููุงุช",
                description="ูุง ุชูุฌุฏ ุจูุงูุงุช ูุชุงุญุฉ ุญุงููุงู ุนู ุฃุนุถุงุก ููุฆุฉ ุงูุชุฏุฑูุณ ุงููููุฒูู.",
                variant="info"
            )
        
        col1_buttons = st.columns([1, 1])
        with col1_buttons[0]:
            ui.button(
                "ุนุฑุถ ุฌููุน ุงูุฃุนุถุงุก",
                variant="outline",
                size="sm",
                class_="w-full",
                on_click=lambda: st.switch_page("pages/7_๐ฅ_ููุฆุฉ ุงูุชุฏุฑูุณ.py")
            )
        with col1_buttons[1]:
            ui.button(
                "ููุญุฉ ุงูุฅูุฌุงุฒุงุช",
                variant="outline",
                size="sm",
                class_="w-full",
                on_click=lambda: st.switch_page("pages/10_๐_ุฅูุฌุงุฒุงุช_ุงูุฃุนุถุงุก.py")
            )
    
    # ุฃุญุฏุซ ุงูุฅูุฌุงุฒุงุช
    with col2:
        st.markdown("### ๐ ุฃุญุฏุซ ุงูุฅูุฌุงุฒุงุช")
        
        if 'faculty_achievements' in locals() and not faculty_achievements.empty:
            for _, achievement in faculty_achievements.iterrows():
                date_obj = datetime.strptime(achievement['ุงูุชุงุฑูุฎ'], "%Y-%m-%d")
                formatted_date = date_obj.strftime("%d/%m/%Y")
                
                with ui.card(class_="mb-3"):
                    st.markdown(f"**{achievement['ุงูุนุถู']}** ({achievement['ุงูุจุฑูุงูุฌ']})")
                    st.markdown(achievement['ุงูุฅูุฌุงุฒ'])
                    ui.badge(f"ุงูุชุงุฑูุฎ: {formatted_date}", variant="secondary", size="sm")
                    ui.badge(f"ุงูููุงุท: {achievement['ุงูููุงุท']}", variant="primary", size="sm")
        else:
            ui.alert(
                title="ูุนูููุงุช",
                description="ูุง ุชูุฌุฏ ุจูุงูุงุช ูุชุงุญุฉ ุญุงููุงู ุนู ุฅูุฌุงุฒุงุช ุฃุนุถุงุก ููุฆุฉ ุงูุชุฏุฑูุณ.",
                variant="info"
            )
        
        st.markdown("")
        ui.button(
            "ุนุฑุถ ุฌููุน ุงูุฅูุฌุงุฒุงุช",
            variant="outline",
            size="sm",
            class_="w-full",
            on_click=lambda: st.switch_page("pages/10_๐_ุฅูุฌุงุฒุงุช_ุงูุฃุนุถุงุก.py")
        )

# ---- ูุฎุทุท ุญุฑุงุฑู ูููุคุดุฑุงุช ุงูุฑุฆูุณูุฉ ----
st.subheader("ูุคุดุฑุงุช ุงูุจุฑุงูุฌ ุงูุฑุฆูุณูุฉ")

# ุงูุชุฃูุฏ ูู ูุฌูุฏ ุงูุจูุงูุงุช ูุจู ุฅูุดุงุก ุงููุฎุทุท
if 'latest_year_data' in locals() and not latest_year_data.empty:
    with ui.card(class_="border-0 shadow-sm p-4"):
        # ูุถุน ุงููุฎุทุท ุงูุญุฑุงุฑู ุจุงุณุชุฎุฏุงู Plotly ุจุทุฑููุฉ ูุจุงุดุฑุฉ ุฏูู ุงุณุชุฎุฏุงู pivot
        fig_heatmap = go.Figure(data=go.Heatmap(
            z=latest_year_data[["ูุณุจุฉ ุงููุฌุงุญ", "ูุนุฏู ุงูุฑุถุง"]].values,
            x=["ูุณุจุฉ ุงููุฌุงุญ", "ูุนุฏู ุงูุฑุถุง"],
            y=latest_year_data["ุงูุจุฑูุงูุฌ"],
            colorscale="Viridis",
            text=latest_year_data[["ูุณุจุฉ ุงููุฌุงุญ", "ูุนุฏู ุงูุฑุถุง"]].values,
            texttemplate="%{text}%",
            textfont={"size":12},
        ))
        
        fig_heatmap.update_layout(
            title="ููุงุฑูุฉ ุงููุคุดุฑุงุช ุงูุฑุฆูุณูุฉ ุนุจุฑ ุงูุจุฑุงูุฌ",
            margin=dict(t=50, b=0, l=0, r=0),
            height=400,
        )
        
        st.plotly_chart(fig_heatmap, use_container_width=True)
else:
    ui.alert(
        title="ุชูุจูู",
        description="ูุง ูููู ุนุฑุถ ุงููุฎุทุท ุงูุญุฑุงุฑู ุจุณุจุจ ุนุฏู ุชููุฑ ุงูุจูุงูุงุช.",
        variant="warning"
    )

# ---- ูุตุงุฆุญ ูููุณุชุฎุฏู ----
with ui.card(class_="mt-3"):
    ui.alert(
        title="ูุตุงุฆุญ ููุงุณุชุฎุฏุงู",
        description="""
        - ุงููุฑ ุนูู ุงุณู ุฃู ุจุฑูุงูุฌ ูู ุงููุงุฆูุฉ ุงูุฌุงูุจูุฉ ูุงุณุชุนุฑุงุถ ุชูุงุตููู
        - ุงุณุชุฎุฏู ุตูุญุฉ "ููุฆุฉ ุงูุชุฏุฑูุณ" ูุนุฑุถ ูุนูููุงุช ุงูุฃุนุถุงุก
        - ูู ุจุฒูุงุฑุฉ "ุงูุชููููุงุช ูุงูุงุณุชุทูุงุนุงุช" ููุงุทูุงุน ุนูู ูุชุงุฆุฌ ุงูุชููููุงุช
        - ุงุณุชุฎุฏู "ููุญุฉ ุฅูุฌุงุฒุงุช ุงูุฃุนุถุงุก" ูุชุณุฌูู ูุนุฑุถ ุฅูุฌุงุฒุงุช ุฃุนุถุงุก ููุฆุฉ ุงูุชุฏุฑูุณ
        """,
        variant="default"
    )
