import streamlit as st
import pandas as pd
import plotly.express as px
import plotly.graph_objects as go
from pages.utils.github_helpers import get_github_file_content
from datetime import datetime
import streamlit_shadcn_ui as ui

# ุฅุนุฏุงุฏุงุช ุงูุตูุญุฉ
st.set_page_config(
    page_title="ููุญุฉ ูุคุดุฑุงุช ุงูุจุฑุงูุฌ ุงูุฃูุงุฏูููุฉ",
    page_icon="๐",
    layout="wide"
)

# CSS ูุฎุตุต ูุฏุนู ุงููุบุฉ ุงูุนุฑุจูุฉ ูุงูุชุฎุทูุท
st.markdown("""
<style>
    /* ุชุนุฏููุงุช ุนุงูุฉ ูุฏุนู RTL */
    .stApp {
        direction: rtl;
        text-align: right;
    }
    /* ... ุจููุฉ ุงูุชูุณููุงุช ููุง ูู ุงูุฃุตู ... */
</style>
<link href="https://fonts.googleapis.com/css2?family=Tajawal:wght@400;500;700&display=swap" rel="stylesheet">
""", unsafe_allow_html=True)

# ---- ุงูุชุฑููุณุฉ ----
col1, col2 = st.columns([3, 1])
with col1:
    st.title("๐ ููุญุฉ ูุคุดุฑุงุช ุงูุจุฑุงูุฌ ุงูุฃูุงุฏูููุฉ")
    st.markdown("### ูููุฉ ุงููุฑุขู ุงููุฑูู ูุงูุฏุฑุงุณุงุช ุงูุฅุณูุงููุฉ")
with col2:
    today = datetime.now().strftime("%Y/%m/%d")
    st.markdown(f"<div style='text-align: left;'>ุงูุชุงุฑูุฎ: {today}</div>", unsafe_allow_html=True)

# ุฑุณุงูุฉ ุชุฑุญูุจูุฉ ูู ุงูุดุฑูุท ุงูุฌุงูุจู
with st.sidebar:
    ui.alert(
        title="ูุฑุญุจุงู ุจู ูู ููุญุฉ ุงููุนูููุงุช",
        description="ุงุฎุชุฑ ุจุฑูุงูุฌูุง ูู ุงููุงุฆูุฉ ุฃุนูุงู ูุนุฑุถ ุชูุงุตููู",
        variant="default"
    )

# ---- ุชุญููู ุงูุจูุงูุงุช ----
@st.cache_data(ttl=3600)
def load_department_summary():
    try:
        return get_github_file_content("data/department_summary.csv")
    except:
        data = {"ุงูุจุฑูุงูุฌ": ["ุจูุงููุฑููุณ ูู ุงููุฑุขู ูุนูููู","ุจูุงููุฑููุณ ุงููุฑุงุกุงุช","ูุงุฌุณุชูุฑ ุงูุฏุฑุงุณุงุช ุงููุฑุขููุฉ ุงููุนุงุตุฑุฉ","ูุงุฌุณุชูุฑ ุงููุฑุงุกุงุช","ุฏูุชูุฑุงู ุนููู ุงููุฑุขู","ุฏูุชูุฑุงู ุงููุฑุงุกุงุช"],
                "ุนุฏุฏ ุงูุทูุงุจ": [125,110,90,120,70,85],
                "ุนุฏุฏ ุงูุทุงูุจุงุช": [85,70,60,80,50,55],
                "ุฃุนุถุงุก ููุฆุฉ ุงูุชุฏุฑูุณ": [15,12,8,10,5,6]}
        return pd.DataFrame(data)

@st.cache_data(ttl=3600)
def load_yearly_data():
    years = list(range(2020,2025))
    data = []
    programs = load_department_summary()["ุงูุจุฑูุงูุฌ"].tolist()
    for year in years:
        for i, program in enumerate(programs):
            male = 60 + (year-2020)*5 + i*10
            female = 40 + (year-2020)*5 + i*8
            total = male + female
            data.append({"ุงูุนุงู": year,
                         "ุงูุจุฑูุงูุฌ": program,
                         "ุนุฏุฏ ุงูุทูุงุจ": male,
                         "ุนุฏุฏ ุงูุทุงูุจุงุช": female,
                         "ุงููุฌููุน": total,
                         "ูุณุจุฉ ุงููุฌุงุญ": min(95,70 + (year-2020)*2 + i*2),
                         "ูุนุฏู ุงูุฑุถุง": min(90,75 + (year-2020)*1.5 + i)})
    return pd.DataFrame(data)

@st.cache_data(ttl=3600)
def load_faculty_achievements():
    achievements = [
        {"ุงูุนุถู":"ุฏ. ูุญูุฏ ุฃุญูุฏ","ุงูุฅูุฌุงุฒ":"ูุดุฑ ุจุญุซ ูู ูุฌูุฉ ุนุงูููุฉ","ุงูุชุงุฑูุฎ":"2025-04-15","ุงูููุงุท":50,"ุงูุจุฑูุงูุฌ":"ุจูุงููุฑููุณ ูู ุงููุฑุขู ูุนูููู"},
        {"ุงูุนุถู":"ุฏ. ุนุงุฆุดุฉ ุณุนุฏ","ุงูุฅูุฌุงุฒ":"ุฅุทูุงู ูุจุงุฏุฑุฉ ุชุนููููุฉ","ุงูุชุงุฑูุฎ":"2025-04-10","ุงูููุงุท":40,"ุงูุจุฑูุงูุฌ":"ุฏูุชูุฑุงู ุนููู ุงููุฑุขู"},
        {"ุงูุนุถู":"ุฏ. ุนุจุฏุงููู ูุญูุฏ","ุงูุฅูุฌุงุฒ":"ุงููุดุงุฑูุฉ ูู ูุคุชูุฑ ุฏููู","ุงูุชุงุฑูุฎ":"2025-04-05","ุงูููุงุท":35,"ุงูุจุฑูุงูุฌ":"ุจูุงููุฑููุณ ุงููุฑุงุกุงุช"}
    ]
    return pd.DataFrame(achievements)

@st.cache_data(ttl=3600)
def load_top_faculty():
    top = [
        {"ุงูุงุณู":"ุฏ. ุนุงุฆุดุฉ ุณุนุฏ","ุงูููุจ":"ุงูุนุถู ุงูููุฉ","ุงูุดุงุฑุฉ":"๐","ุงูููุงุท":320,"ุงูุจุฑูุงูุฌ":"ุฏูุชูุฑุงู ุนููู ุงููุฑุขู"},
        {"ุงูุงุณู":"ุฏ. ูุญูุฏ ุฃุญูุฏ","ุงูููุจ":"ุงูุนุถู ุงููููุฒ","ุงูุดุงุฑุฉ":"๐","ุงูููุงุท":280,"ุงูุจุฑูุงูุฌ":"ุจูุงููุฑููุณ ูู ุงููุฑุขู ูุนูููู"}
    ]
    return pd.DataFrame(top)

# ุชุญููู ุงูุจูุงูุงุช ููุนุงูุฌุฉ
try:
    dept_data = load_department_summary()
    total_students = dept_data["ุนุฏุฏ ุงูุทูุงุจ"].sum()
    total_females = dept_data["ุนุฏุฏ ุงูุทุงูุจุงุช"].sum()
    yearly = load_yearly_data()
    max_year = yearly["ุงูุนุงู"].max()
    latest = yearly[yearly["ุงูุนุงู"]==max_year]
    achievements = load_faculty_achievements()
    top_fac = load_top_faculty()
except Exception as e:
    ui.alert(title="ุฎุทุฃ ูู ุงูุจูุงูุงุช", description=str(e), variant="destructive")
    dept_data = pd.DataFrame([]); latest = pd.DataFrame([]); achievements = pd.DataFrame([]); top_fac = pd.DataFrame([])

# ---- ุงููุคุดุฑุงุช ุงูุฑุฆูุณูุฉ ----
st.subheader("ุงููุคุดุฑุงุช ุงูุฑุฆูุณูุฉ")
col1, col2, col3, col4 = st.columns(4)
ui.metric_card(title="ุนุฏุฏ ุงูุทูุงุจ", content=f"{total_students}", description="+3% ููุฐ ุงูุนุงู ุงููุงุถู", trend="up", key="m1").render()
ui.metric_card(title="ุนุฏุฏ ุงูุทุงูุจุงุช", content=f"{total_females}", description="+7% ููุฐ ุงูุนุงู ุงููุงุถู", trend="up", key="m2").render()
ui.metric_card(title="ูุนุฏู ุงููุฌุงุญ ุงูุฅุฌูุงูู", content="87%", description="+3% ููุฐ ุงูุนุงู ุงููุงุถู", trend="up", key="m3").render()
ui.metric_card(title="ูุชูุณุท ุฑุถุง ุงูุทูุงุจ", content="92%", description="+4% ููุฐ ุงูุนุงู ุงููุงุถู", trend="up", key="m4").render()

# ---- ุชุญููู ุงูุจุฑุงูุฌ ----
st.subheader("ุชุญููู ุงูุจุฑุงูุฌ ุงูุฃูุงุฏูููุฉ")
if not latest.empty:
    if 'active_tab' not in st.session_state:
        st.session_state.active_tab = "ุชูุฒูุน ุงูุทูุงุจ ูุงูุทุงูุจุงุช"
    with ui.tabs(value=st.session_state.active_tab):
        ui.tab("ุชูุฒูุน ุงูุทูุงุจ ูุงูุทุงูุจุงุช", id="tab1")
        ui.tab("ููุงุฑูุฉ ุงูุจุฑุงูุฌ", id="tab2")
        ui.tab("ุงูุชุทูุฑ ุงูุณููู", id="tab3")
    active = st.session_state.active_tab
    if active == "ุชูุฒูุน ุงูุทูุงุจ ูุงูุทุงูุจุงุช":
        c1, c2 = st.columns(2)
        with c1:
            pie = pd.DataFrame({"ุงููุฆุฉ":["ุงูุทูุงุจ","ุงูุทุงูุจุงุช"],"ุงูุนุฏุฏ":[total_students, total_females]})
            fig = px.pie(pie, names="ุงููุฆุฉ", values="ุงูุนุฏุฏ", title="ุชูุฒูุน ุงูุทูุงุจ ูุงูุทุงูุจุงุช")
            st.plotly_chart(fig, use_container_width=True)
        with c2:
            fig2 = px.bar(latest, y="ุงูุจุฑูุงูุฌ", x=["ุนุฏุฏ ุงูุทูุงุจ","ุนุฏุฏ ุงูุทุงูุจุงุช"], barmode="stack", title="ุญุณุจ ุงูุจุฑูุงูุฌ")
            st.plotly_chart(fig2, use_container_width=True)
    elif active == "ููุงุฑูุฉ ุงูุจุฑุงูุฌ":
        fig3 = px.bar(latest, x="ุงูุจุฑูุงูุฌ", y=["ูุณุจุฉ ุงููุฌุงุญ","ูุนุฏู ุงูุฑุถุง"], barmode="group", title="ููุงุฑูุฉ ุงููุคุดุฑุงุช")
        st.plotly_chart(fig3, use_container_width=True)
    else:
        sp, gp = st.columns([2,1])
        with sp:
            program = ui.select(label="ุงุฎุชุฑ ุงูุจุฑูุงูุฌ:", options=[{"label":p,"value":p} for p in dept_data["ุงูุจุฑูุงูุฌ"]], default=dept_data["ุงูุจุฑูุงูุฌ"][0], key="sel_prog")
        with gp:
            gender = ui.radio_group(label="ุงุฎุชุฑ ุงููุฆุฉ:", options=[{"label":"ุงููู","value":"all"},{"label":"ุทูุงุจ","value":"male"},{"label":"ุทุงูุจุงุช","value":"female"}], default="all", orientation="horizontal", key="sel_gen")
        dfp = yearly[yearly["ุงูุจุฑูุงูุฌ"]==program]
        if not dfp.empty:
            cols = ["ุนุฏุฏ ุงูุทูุงุจ","ุนุฏุฏ ุงูุทุงูุจุงุช"] if gender=="all" else ["ุนุฏุฏ ุงูุทูุงุจ"] if gender=="male" else ["ุนุฏุฏ ุงูุทุงูุจุงุช"]
            fig4 = px.line(dfp, x="ุงูุนุงู", y=cols, title=f"ุชุทูุฑ {program}")
            st.plotly_chart(fig4, use_container_width=True)

# ---- ููุฆุฉ ุงูุชุฏุฑูุณ ูุงูุฅูุฌุงุฒุงุช ----
st.subheader("ุฃุนุถุงุก ููุฆุฉ ุงูุชุฏุฑูุณ ูุงูุฅูุฌุงุฒุงุช")
colA, colB = st.columns(2)
with colA:
    st.markdown("### ๐ ุฃุนุถุงุก ููุฆุฉ ุงูุชุฏุฑูุณ ุงููููุฒูู")
    for _,row in top_fac.iterrows():
        with ui.card(title="{0} {1}".format(row['ุงูุดุงุฑุฉ'],row['ุงูุงุณู']), key=row['ุงูุงุณู']):
            ui.badge(row['ุงูููุจ'], variant="outline").render()
            st.write(f"ุจุฑูุงูุฌ: {row['ุงูุจุฑูุงูุฌ']} โ ููุงุท: {row['ุงูููุงุท']}")
with colB:
    st.markdown("### ๐ ุฃุญุฏุซ ุงูุฅูุฌุงุฒุงุช")
    for _,r in achievements.iterrows():
        with ui.card(title=r['ุงูุนุถู'], key=r['ุงูุนุถู']):
            st.write(r['ุงูุฅูุฌุงุฒ'])
            ui.badge(f"ุงูุชุงุฑูุฎ: {r['ุงูุชุงุฑูุฎ']}", size="sm").render()
            ui.badge(f"ููุงุท: {r['ุงูููุงุท']}", size="sm").render()

# ---- ุงููุฎุทุท ุงูุญุฑุงุฑู ----
st.subheader("ูุคุดุฑุงุช ุงูุจุฑุงูุฌ ุงูุฑุฆูุณูุฉ")
if not latest.empty:
    figh = go.Figure(go.Heatmap(z=latest[["ูุณุจุฉ ุงููุฌุงุญ","ูุนุฏู ุงูุฑุถุง"]].values,
                                 x=["ูุณุจุฉ ุงููุฌุงุญ","ูุนุฏู ุงูุฑุถุง"],
                                 y=latest["ุงูุจุฑูุงูุฌ"],
                                 colorscale="Viridis"))
    st.plotly_chart(figh, use_container_width=True)

# ---- ูุตุงุฆุญ ุงููุณุชุฎุฏู ----
st.subheader("ูุตุงุฆุญ ููุงุณุชุฎุฏุงู")
ui.alert(
    title="ูุตุงุฆุญ ููุงุณุชุฎุฏุงู",
    description="- ุงููุฑ ุนูู ุงุณู ุจุฑูุงูุฌ ูู ุงูุดุฑูุท ุงูุฌุงูุจู\n- ูููุฒูุฏ ุดุงูุฏ ุตูุญุงุช ููุฆุฉ ุงูุชุฏุฑูุณ ูุงูุฅูุฌุงุฒุงุช",
    variant="default"
)
