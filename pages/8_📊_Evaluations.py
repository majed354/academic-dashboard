import streamlit as st
import pandas as pd
import plotly.express as px
import numpy as np

# ุฅุนุฏุงุฏุงุช ุงูุตูุญุฉ
st.set_page_config(
    page_title="Evaluations & Surveys",
    page_icon="๐",
    layout="wide"
)

st.title("๐ ุงูุชููููุงุช ูุงูุงุณุชุทูุงุนุงุช")
st.write("ุตูุญุฉ ุนุฑุถ ูุชุงุฆุฌ ุชููููุงุช ุงูููุฑุฑุงุช ูุงุณุชุทูุงุนุงุช ุงูุฑุฃู")

# ุจูุงูุงุช ุชุฌุฑูุจูุฉ ููุชููููุงุช
def generate_evaluation_data():
    # ุจูุงูุงุช ุชุฌุฑูุจูุฉ ูุชููููุงุช ุงูููุฑุฑุงุช
    programs = [
        "ุจูุงููุฑููุณ ูู ุงููุฑุขู ูุนูููู",
        "ุจูุงููุฑููุณ ุงููุฑุงุกุงุช",
        "ูุงุฌุณุชูุฑ ุงูุฏุฑุงุณุงุช ุงููุฑุขููุฉ ุงููุนุงุตุฑุฉ",
        "ูุงุฌุณุชูุฑ ุงููุฑุงุกุงุช",
        "ุฏูุชูุฑุงู ุนููู ุงููุฑุขู",
        "ุฏูุชูุฑุงู ุงููุฑุงุกุงุช"
    ]

    years = [2020, 2021, 2022, 2023, 2024]
    courses = [
        {"ุฑูุฒ": "QUR101", "ุงุณู": "ูุฏุฎู ูุนููู ุงููุฑุขู"},
        {"ุฑูุฒ": "QUR202", "ุงุณู": "ุฃุตูู ุงูุชูุณูุฑ"},
        {"ุฑูุฒ": "QUR305", "ุงุณู": "ููุงูุฌ ุงูููุณุฑูู"},
        {"ุฑูุฒ": "READ101", "ุงุณู": "ุงููุฑุงุกุงุช ุงูุนุดุฑ"},
        {"ุฑูุฒ": "READ202", "ุงุณู": "ุงูุดุงุทุจูุฉ"},
        {"ุฑูุฒ": "CONT305", "ุงุณู": "ููุงูุฌ ุงููุนุงุตุฑูู"}
    ]

    aspects = [
        "ูุญุชูู ุงูููุฑุฑ",
        "ุทุฑููุฉ ุงูุชุฏุฑูุณ",
        "ุชูุงุนู ุงูุฃุณุชุงุฐ",
        "ุฃุณุงููุจ ุงูุชูููู",
        "ุงููุตุงุฏุฑ ูุงููุฑุงุฌุน"
    ]

    data = []

    for year in years:
        for program in programs:
            num_courses = np.random.randint(2, 5)  # ุนุฏุฏ ุนุดูุงุฆู ูู ุงูููุฑุฑุงุช ููู ุจุฑูุงูุฌ
            for _ in range(num_courses):
                course = np.random.choice(courses)
                for aspect in aspects:
                    # ุชูููุฏ ุชูููู ุนุดูุงุฆู ูุน ููู ูุชุญุณู ูุน ูุฑูุฑ ุงูุณููุงุช
                    base_score = np.random.randint(70, 90)
                    improvement = (year - 2020) * np.random.randint(1, 3)
                    score = min(100, base_score + improvement)

                    data.append({
                        "ุงูุนุงู": year,
                        "ุงูุจุฑูุงูุฌ": program,
                        "ุฑูุฒ ุงูููุฑุฑ": course["ุฑูุฒ"],
                        "ุงุณู ุงูููุฑุฑ": course["ุงุณู"],
                        "ุฌุงูุจ ุงูุชูููู": aspect,
                        "ูุณุจุฉ ุงูุฑุถุง": score
                    })

    return pd.DataFrame(data)

# ุจูุงูุงุช ุชุฌุฑูุจูุฉ ูุงุณุชุทูุงุนุงุช ุงูุฑุฃู
def generate_survey_data():
    # ุจูุงูุงุช ุชุฌุฑูุจูุฉ ูุงุณุชุทูุงุนุงุช ุฑุถุง ุงูุทูุงุจ ูุงูุฎุฑูุฌูู
    categories = ["ุฑุถุง ุงูุทูุงุจ", "ุฑุถุง ุงูุฎุฑูุฌูู", "ุฑุถุง ุฃุตุญุงุจ ุงูุนูู"]
    years = [2020, 2021, 2022, 2023, 2024]
    programs = [
        "ุจูุงููุฑููุณ ูู ุงููุฑุขู ูุนูููู",
        "ุจูุงููุฑููุณ ุงููุฑุงุกุงุช",
        "ูุงุฌุณุชูุฑ ุงูุฏุฑุงุณุงุช ุงููุฑุขููุฉ ุงููุนุงุตุฑุฉ",
        "ูุงุฌุณุชูุฑ ุงููุฑุงุกุงุช",
        "ุฏูุชูุฑุงู ุนููู ุงููุฑุขู",
        "ุฏูุชูุฑุงู ุงููุฑุงุกุงุช"
    ]

    aspects = [
        "ุงูุจูุฆุฉ ุงูุชุนููููุฉ",
        "ุงูููุงูุฌ ุงูุฏุฑุงุณูุฉ",
        "ุฎุฏูุงุช ุงูุทูุงุจ",
        "ุงูููุงุฑุงุช ุงูููุชุณุจุฉ",
        "ูุฑุต ุงูุชูุธูู"
    ]

    data = []

    for category in categories:
        for year in years:
            for program in programs:
                for aspect in aspects:
                    # ุชูููุฏ ูุณุจุฉ ุฑุถุง ุนุดูุงุฆูุฉ ูุน ููู ูุชุญุณู ูุน ูุฑูุฑ ุงูุณููุงุช
                    base_score = np.random.randint(65, 85)
                    improvement = (year - 2020) * np.random.randint(1, 3)
                    score = min(100, base_score + improvement)

                    data.append({
                        "ููุน ุงูุงุณุชุทูุงุน": category,
                        "ุงูุนุงู": year,
                        "ุงูุจุฑูุงูุฌ": program,
                        "ุฌุงูุจ ุงูุชูููู": aspect,
                        "ูุณุจุฉ ุงูุฑุถุง": score
                    })

    return pd.DataFrame(data)

# ุชุญููู ุงูุจูุงูุงุช
eval_df = generate_evaluation_data()
survey_df = generate_survey_data()

# ุชุจููุจุงุช ูุนุฑุถ ุงูุชููููุงุช ูุงูุงุณุชุทูุงุนุงุช
tab1, tab2 = st.tabs(["ุชูููู ุงูููุฑุฑุงุช", "ุงุณุชุทูุงุนุงุช ุงูุฑุฃู"])

with tab1:
    st.header("ุชูููู ุงูููุฑุฑุงุช ุงูุฏุฑุงุณูุฉ")

    # ุนูุงุตุฑ ุงูุชุญูู ููุชุตููุฉ
    col1, col2, col3 = st.columns(3)

    with col1:
        selected_year_eval = st.selectbox(
            "ุงุฎุชุฑ ุงูุนุงู ุงูุฏุฑุงุณู:", 
            eval_df["ุงูุนุงู"].unique(),
            key="eval_year"
        )

    with col2:
        selected_program_eval = st.selectbox(
            "ุงุฎุชุฑ ุงูุจุฑูุงูุฌ:", 
            ["ุฌููุน ุงูุจุฑุงูุฌ"] + eval_df["ุงูุจุฑูุงูุฌ"].unique().tolist(),
            key="eval_program"
        )

    with col3:
        all_courses = eval_df[["ุฑูุฒ ุงูููุฑุฑ", "ุงุณู ุงูููุฑุฑ"]].drop_duplicates()
        all_courses["ุงูููุฑุฑ ุงููุงูู"] = all_courses["ุฑูุฒ ุงูููุฑุฑ"] + " - " + all_courses["ุงุณู ุงูููุฑุฑ"]

        selected_course = st.selectbox(
            "ุงุฎุชุฑ ุงูููุฑุฑ:", 
            ["ุฌููุน ุงูููุฑุฑุงุช"] + all_courses["ุงูููุฑุฑ ุงููุงูู"].tolist(),
            key="eval_course"
        )

    # ุชุทุจูู ุงูุชุตููุฉ
    filtered_eval = eval_df[eval_df["ุงูุนุงู"] == selected_year_eval]

    if selected_program_eval != "ุฌููุน ุงูุจุฑุงูุฌ":
        filtered_eval = filtered_eval[filtered_eval["ุงูุจุฑูุงูุฌ"] == selected_program_eval]

    if selected_course != "ุฌููุน ุงูููุฑุฑุงุช":
        course_code = selected_course.split(" - ")[0]
        filtered_eval = filtered_eval[filtered_eval["ุฑูุฒ ุงูููุฑุฑ"] == course_code]

    # ุนุฑุถ ุงููุชุงุฆุฌ
    if not filtered_eval.empty:
        # ูุธุฑุฉ ุนุงูุฉ
        st.subheader("ูุธุฑุฉ ุนุงูุฉ ุนูู ุงูุชููููุงุช")

        # ูุชูุณุท ูุณุจ ุงูุฑุถุง ููู ุฌุงูุจ
        avg_by_aspect = filtered_eval.groupby("ุฌุงูุจ ุงูุชูููู")["ูุณุจุฉ ุงูุฑุถุง"].mean().reset_index()

        fig = px.bar(
            avg_by_aspect, 
            x="ุฌุงูุจ ุงูุชูููู", 
            y="ูุณุจุฉ ุงูุฑุถุง",
            title=f"ูุชูุณุท ูุณุจ ุงูุฑุถุง ูุฌูุงูุจ ุงูุชูููู ({selected_year_eval})",
            color="ูุณุจุฉ ุงูุฑุถุง",
            color_continuous_scale="Viridis",
            range_y=[0, 100]
        )
        st.plotly_chart(fig, use_container_width=True)

        # ุชูุงุตูู ุงูุชููููุงุช
        st.subheader("ุชูุงุตูู ุชููููุงุช ุงูููุฑุฑุงุช")

        # ุฅุฐุง ุชู ุชุญุฏูุฏ ููุฑุฑ ูุญุฏุฏ
        if selected_course != "ุฌููุน ุงูููุฑุฑุงุช":
            course_name = selected_course.split(" - ")[1]
            st.write(f"ุชูุงุตูู ุชูููู ููุฑุฑ: **{selected_course}**")

            # ุฅูุดุงุก ุฑุณู ุฑุงุฏุงุฑู ูุชูููู ุงูููุฑุฑ
            fig = px.line_polar(
                filtered_eval, 
                r="ูุณุจุฉ ุงูุฑุถุง", 
                theta="ุฌุงูุจ ุงูุชูููู",
                line_close=True,
                range_r=[0, 100],
                title=f"ุชูููู ููุฑุฑ {course_name} ({selected_year_eval})"
            )
            st.plotly_chart(fig, use_container_width=True)

            # ุนุฑุถ ุงูุจูุงูุงุช ูุฌุฏูู
            st.dataframe(
                filtered_eval[["ุฌุงูุจ ุงูุชูููู", "ูุณุจุฉ ุงูุฑุถุง"]].sort_values("ุฌุงูุจ ุงูุชูููู"),
                use_container_width=True
            )
        else:
            # ุนุฑุถ ุฌููุน ุงูููุฑุฑุงุช
            pivoted = filtered_eval.pivot_table(
                index=["ุฑูุฒ ุงูููุฑุฑ", "ุงุณู ุงูููุฑุฑ"],
                columns="ุฌุงูุจ ุงูุชูููู",
                values="ูุณุจุฉ ุงูุฑุถุง",
                aggfunc="mean"
            ).reset_index()

            # ุฅุถุงูุฉ ุนููุฏ ุงููุชูุณุท ุงูุนุงู
            pivoted["ุงููุชูุณุท ุงูุนุงู"] = pivoted.iloc[:, 2:].mean(axis=1)

            # ุชุฑุชูุจ ุญุณุจ ุงููุชูุณุท ุงูุนุงู ุชูุงุฒูููุง
            pivoted = pivoted.sort_values("ุงููุชูุณุท ุงูุนุงู", ascending=False)

            st.dataframe(pivoted, use_container_width=True)
    else:
        st.warning("ูุง ุชูุฌุฏ ุจูุงูุงุช ุชูููู ูุชุงุญุฉ ูููุนุงููุฑ ุงููุญุฏุฏุฉ")

with tab2:
    st.header("ุงุณุชุทูุงุนุงุช ุงูุฑุฃู")

    # ุนูุงุตุฑ ุงูุชุญูู ููุชุตููุฉ
    col1, col2, col3 = st.columns(3)

    with col1:
        selected_survey = st.selectbox(
            "ููุน ุงูุงุณุชุทูุงุน:", 
            survey_df["ููุน ุงูุงุณุชุทูุงุน"].unique(),
            key="survey_type"
        )

    with col2:
        selected_year_survey = st.selectbox(
            "ุงูุนุงู ุงูุฏุฑุงุณู:", 
            survey_df["ุงูุนุงู"].unique(),
            key="survey_year"
        )

    with col3:
        selected_program_survey = st.selectbox(
            "ุงูุจุฑูุงูุฌ:", 
            ["ุฌููุน ุงูุจุฑุงูุฌ"] + survey_df["ุงูุจุฑูุงูุฌ"].unique().tolist(),
            key="survey_program"
        )

    # ุชุทุจูู ุงูุชุตููุฉ
    filtered_survey = survey_df[
        (survey_df["ููุน ุงูุงุณุชุทูุงุน"] == selected_survey) & 
        (survey_df["ุงูุนุงู"] == selected_year_survey)
    ]

    if selected_program_survey != "ุฌููุน ุงูุจุฑุงูุฌ":
        filtered_survey = filtered_survey[filtered_survey["ุงูุจุฑูุงูุฌ"] == selected_program_survey]

    # ุนุฑุถ ุงููุชุงุฆุฌ
    if not filtered_survey.empty:
        st.subheader(f"ูุชุงุฆุฌ ุงุณุชุทูุงุน {selected_survey} ูุนุงู {selected_year_survey}")

        # ุฑุณู ุจูุงูู ููุชุงุฆุฌ ุงูุงุณุชุทูุงุน
        if selected_program_survey == "ุฌููุน ุงูุจุฑุงูุฌ":
            # ููุงุฑูุฉ ุจูู ุงูุจุฑุงูุฌ
            avg_by_program = filtered_survey.groupby(["ุงูุจุฑูุงูุฌ", "ุฌุงูุจ ุงูุชูููู"])["ูุณุจุฉ ุงูุฑุถุง"].mean().reset_index()

            fig = px.bar(
                avg_by_program, 
                x="ุฌุงูุจ ุงูุชูููู", 
                y="ูุณุจุฉ ุงูุฑุถุง", 
                color="ุงูุจุฑูุงูุฌ",
                barmode="group",
                title=f"ููุงุฑูุฉ ูุชุงุฆุฌ {selected_survey} ุจูู ุงูุจุฑุงูุฌ ({selected_year_survey})",
                range_y=[0, 100]
            )
            st.plotly_chart(fig, use_container_width=True)
        else:
            # ุฑุณู ููุตู ููุจุฑูุงูุฌ ุงููุญุฏุฏ
            fig = px.bar(
                filtered_survey, 
                x="ุฌุงูุจ ุงูุชูููู", 
                y="ูุณุจุฉ ุงูุฑุถุง",
                title=f"ูุชุงุฆุฌ {selected_survey} ูุจุฑูุงูุฌ {selected_program_survey} ({selected_year_survey})",
                color="ูุณุจุฉ ุงูุฑุถุง",
                color_continuous_scale="Viridis",
                range_y=[0, 100]
            )
            st.plotly_chart(fig, use_container_width=True)

        # ุชุทูุฑ ุงููุชุงุฆุฌ ุนุจุฑ ุงูุณููุงุช
        st.subheader("ุชุทูุฑ ุงููุชุงุฆุฌ ุนุจุฑ ุงูุณููุงุช")

        # ุงูุญุตูู ุนูู ุจูุงูุงุช ุฌููุน ุงูุณููุงุช ููููุงุฑูุฉ
        trend_data = survey_df[survey_df["ููุน ุงูุงุณุชุทูุงุน"] == selected_survey]
        if selected_program_survey != "ุฌููุน ุงูุจุฑุงูุฌ":
            trend_data = trend_data[trend_data["ุงูุจุฑูุงูุฌ"] == selected_program_survey]

        # ูุชูุณุท ููุฌูุงูุจ ุญุณุจ ุงูุณูุฉ
        trend_avg = trend_data.groupby(["ุงูุนุงู"])["ูุณุจุฉ ุงูุฑุถุง"].mean().reset_index()

        fig = px.line(
            trend_avg, 
            x="ุงูุนุงู", 
            y="ูุณุจุฉ ุงูุฑุถุง",
            markers=True,
            title=f"ุชุทูุฑ ูุชูุณุท ูุชุงุฆุฌ {selected_survey} ุนุจุฑ ุงูุณููุงุช",
            range_y=[60, 100]
        )
        st.plotly_chart(fig, use_container_width=True)

        # ุฌุฏูู ุชูุตููู
        st.subheader("ุชูุงุตูู ูุชุงุฆุฌ ุงูุงุณุชุทูุงุน")
        st.dataframe(
            filtered_survey[["ุงูุจุฑูุงูุฌ", "ุฌุงูุจ ุงูุชูููู", "ูุณุจุฉ ุงูุฑุถุง"]].sort_values(["ุงูุจุฑูุงูุฌ", "ุฌุงูุจ ุงูุชูููู"]),
            use_container_width=True
        )
    else:
        st.warning("ูุง ุชูุฌุฏ ุจูุงูุงุช ุงุณุชุทูุงุน ูุชุงุญุฉ ูููุนุงููุฑ ุงููุญุฏุฏุฉ")

# ูููุฐุฌ ุงุณุชุทูุงุน ุฌุฏูุฏ
with st.expander("ุงุณุชุทูุงุน ุฑุฃู ุฌุฏูุฏ", expanded=False):
    st.subheader("ุงุณุชุทูุงุน ุฑุฃู ุงูุทูุงุจ")
    st.write("ูุฐุง ูููุฐุฌ ุชุฌุฑูุจู ูุงุณุชุทูุงุน ุฑุฃู ุงูุทูุงุจ. ูููู ุชุนุฏููู ุญุณุจ ูุชุทูุจุงุช ุงููููุฉ.")

    # ูููุฐุฌ ุงูุงุณุชุทูุงุน
    with st.form("survey_form"):
        st.selectbox("ุงูุจุฑูุงูุฌ ุงูุฃูุงุฏููู:", programs)
        st.selectbox("ุงููุณุชูู ุงูุฏุฑุงุณู:", ["ุงูุฃูู", "ุงูุซุงูู", "ุงูุซุงูุซ", "ุงูุฑุงุจุน"])

        st.write("**ุชูููู ุงูุจุฑูุงูุฌ**")
        st.slider("ูุญุชูู ุงูููุฑุฑุงุช ุงูุฏุฑุงุณูุฉ:", 0, 10, 5)
        st.slider("ุทุฑู ุงูุชุฏุฑูุณ ุงููุณุชุฎุฏูุฉ:", 0, 10, 5)
        st.slider("ุฎุฏูุงุช ุงูุฅุฑุดุงุฏ ุงูุฃูุงุฏููู:", 0, 10, 5)
        st.slider("ุงููุฑุงูู ูุงูุชุฌููุฒุงุช:", 0, 10, 5)
        st.slider("ุงูุฃูุดุทุฉ ุงููุงุตููุฉ:", 0, 10, 5)

        st.text_area("ููุงุญุธุงุช ูููุชุฑุญุงุช:")

        submit = st.form_submit_button("ุฅุฑุณุงู ุงูุงุณุชุทูุงุน")

        if submit:
            st.success("ุชู ุงุณุชูุงู ุงูุงุณุชุทูุงุน ุจูุฌุงุญ! ุดูุฑูุง ููุดุงุฑูุชู.")
